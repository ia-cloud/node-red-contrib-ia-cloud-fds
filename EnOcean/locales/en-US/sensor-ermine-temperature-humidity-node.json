{
    "enoceanDataItem": {
        "label": {
            "object_key": "Object Key",
            "object_desc": "Object Description",
            "itemNo": "Item No",
            "dataName": "Data Name",
            "unit": "Unit"
        },
        "placeholder": {
            "sensorId": "Input sensor id here e.g. 0500ef1c"
        },
        "input": {
            "dataItems": {
                "0": {
                    "dataName": "Humidity",
                    "unit": "%"
                },
                "1": {
                    "dataName": "Temperature",
                    "unit": "C"
                }
            }
        }
    },
    "serial": {
        "status": {
            "waiting": "waiting",
            "timeout": "timeout"
        },
        "label": {
            "serialport": "Serial Port",
            "settings": "Settings",
            "baudrate": "Baud Rate",
            "databits": "Data Bits",
            "parity": "Parity",
            "stopbits": "Stop Bits",
            "input": "Input",
            "split": "Split input",
            "deliver": "and deliver",
            "output": "Output",
            "request": "Request",
            "ms": "ms",
            "serial": "serial",
            "enoceanDataItems": "EnOcean Data Items",
            "linkObjName": "linkObjName",
            "enoceanCom": "EnOcean Communication Object",
            "sensorId": "sensor ID",
            "sensorKind": "sensor kind",
            "notify": "notify flag",
            "value": "EnOcean Data",
            "objectName": "object name",
            "entryID": "entry ID",
            "none": "none"
        },
        "placeholder": {
            "serialport": "for example: /dev/ttyUSB0/"
        },
        "parity": {
            "none": "None",
            "even": "Even",
            "mark": "Mark",
            "odd": "Odd",
            "space": "Space"
        },
        "split": {
            "character": "on the character",
            "timeout": "after a timeout of",
            "silent": "after a silence of",
            "lengths": "into fixed lengths of"
        },
        "output": {
            "ascii": "ascii strings",
            "binary": "binary buffers"
        },
        "addsplit": "add split character to output messages",
        "tip": {
            "responsetimeout": "Tip: The default response timeout can be overridden by setting msg.timeout.",
            "split": "Tip: the \"Split on\" character is used to split the input into separate messages. It can also be added to every message sent out to the serial port.",
            "silent": "Tip: In line-silent mode timeout is restarted upon arrival of any character (i.e. inter-byte timeout).",
            "timeout": "Tip: In timeout mode timeout starts from arrival of first character."
        },
        "onopen": "serial port __port__ opened at __baud__ baud __config__",
        "errors": {
            "missing-conf": "missing serial config",
            "serial-port": "serial port",
            "error": "serial port __port__ error: __error__",
            "unexpected-close": "serial port __port__ closed unexpectedly",
            "disconnected": "serial port __port__ disconnected",
            "closed": "serial port __port__ closed"
        }
    }
}
